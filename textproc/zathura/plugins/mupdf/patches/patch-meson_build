cope with mupdf's newer upstream support for building a shared lib

Index: meson.build
--- meson.build.orig
+++ meson.build
@@ -23,35 +23,15 @@ zathura = dependency('zathura', version: '>=0.5.2')
 girara = dependency('girara-gtk3')
 glib = dependency('glib-2.0')
 cairo = dependency('cairo')
-mupdf = dependency('mupdf', required: false, version: '>=@0@.@1@'.format(mupdf_required_version_major, mupdf_required_version_minor))
+mupdf = cc.find_library('mupdf')
 
 build_dependencies = [
   zathura,
   girara,
   glib,
   cairo,
+  mupdf
 ]
-
-if not mupdf.found()
-  # normal build of mupdf
-  mupdf = cc.find_library('mupdf', has_headers: ['mupdf/fitz/version.h', 'mupdf/fitz.h', 'mupdf/pdf.h'], required: true)
-  mupdfthird = cc.find_library('mupdf-third')
-  version_check = '''
-#include <mupdf/fitz/version.h>
-
-#if FZ_VERSION_MAJOR < @0@ || (FZ_VERSION_MAJOR == @0@ && FZ_VERSION_MINOR < @1@)
-#error "mupdf @0@.@1@ or newer is requried"
-#endif
-'''.format(mupdf_required_version_major, mupdf_required_version_minor)
-  if not cc.compiles(version_check, dependencies: [mupdf])
-    error('mupdf @0@.@1@ or newer is required'.format(mupdf_required_version_major, mupdf_required_version_minor))
-  endif
-
-  build_dependencies += [mupdf, mupdfthird]
-else
-  # build from Debian's libmupdf-dev
-  build_dependencies += [mupdf]
-endif
 
 if get_option('plugindir') == ''
   plugindir = zathura.get_variable(pkgconfig: 'plugindir')
