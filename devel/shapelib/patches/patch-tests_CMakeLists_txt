disable fetching gtest, use the ports one

disable shp_bench & linking against google benchmark, not in ports
Index: tests/CMakeLists.txt
--- tests/CMakeLists.txt.orig
+++ tests/CMakeLists.txt
@@ -2,46 +2,11 @@
 
 project(${CMAKE_PROJECT_NAME}Tests CXX)
 
-# Set up GoogleTest and Benchmark
-include(FetchContent)
-
-FetchContent_Declare(
-  benchmark
-  GIT_REPOSITORY https://github.com/google/benchmark.git
-  GIT_TAG v1.9.4
-  GIT_SHALLOW TRUE
-)
-
-FetchContent_Declare(
-  googletest
-  GIT_REPOSITORY https://github.com/google/googletest.git
-  GIT_TAG v1.17.0
-  GIT_SHALLOW TRUE
-)
-
-set(BENCHMARK_DOWNLOAD_DEPENDENCIES OFF CACHE BOOL "" FORCE)
-set(BENCHMARK_ENABLE_INSTALL OFF CACHE BOOL "" FORCE)
-set(BENCHMARK_ENABLE_TESTING OFF CACHE BOOL "" FORCE)
-set(BENCHMARK_INSTALL_DOCS OFF CACHE BOOL "" FORCE)
-
-FetchContent_MakeAvailable(benchmark)
-
-# For Windows: Prevent overriding the parent project's compiler/linker settings
-set(gtest_force_shared_crt ON CACHE BOOL "" FORCE)
-
-# Disable building GMock
-set(BUILD_GMOCK OFF CACHE BOOL "" FORCE)
-
-# Do not install GTest 
-set(INSTALL_GTEST OFF CACHE BOOL "" FORCE)
-
-FetchContent_MakeAvailable(googletest)
-
-set_target_properties(gtest gtest_main benchmark benchmark_main PROPERTIES FOLDER "tests/third-party")
-
-foreach(executable dbf_test sbn_test shp_test shp_bench)
+foreach(executable dbf_test sbn_test shp_test)
   add_executable(${executable} ${PROJECT_SOURCE_DIR}/${executable}.cc)
-  target_link_libraries(${executable} PRIVATE ${PACKAGE} gtest benchmark)
+  target_include_directories(${executable} PRIVATE /usr/local/include)
+  target_link_directories(${executable} PRIVATE /usr/local/lib)
+  target_link_libraries(${executable} PRIVATE ${PACKAGE} gtest)
   add_test(
     NAME ${executable}
     COMMAND ${executable}
